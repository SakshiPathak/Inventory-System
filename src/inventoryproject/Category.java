/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventoryproject;
import com.inventorysystem.helpers.DBConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
/**
 *
 * @author HP
 */
public class Category extends javax.swing.JInternalFrame {

    Connection con=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    List<CategoryClass> categoryList;
    /**
     * Creates new form Category
     */
    public Category() {
        initComponents();
        categoryList = new ArrayList<>();
       // populateCategoryIdCombo();
        populateCategoryNameCombo();
        btndelete.setVisible(false);
    }
    
    public void clear() {

        combocategoryname.setSelectedIndex(0);
        txtcategoryname.setText("");
    }
    
//    private void populateCategoryIdCombo() {
//    try {
//        con = DBConnection.getConnection();
//        PreparedStatement pstmt = con.prepareStatement("select id from category");
//        
//        ResultSet rs = pstmt.executeQuery();
//        combocategoryid.removeAllItems();
//        
//        combocategoryid.addItem("");
////        categoryList = new ArrayList<>();
//        while (rs.next())
//            combocategoryid.addItem(rs.getString("id"));
//        
//    } catch (SQLException ex) {
//        Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
//    }
//    }
    
    private void populateCategoryNameCombo() {
    DefaultComboBoxModel model = new DefaultComboBoxModel();
    try {
        con = DBConnection.getConnection();
        PreparedStatement pstmt = con.prepareStatement("select * from category order by name");
        
        ResultSet rs = pstmt.executeQuery();
        int index = 1;
            Category.Item tItem = new Category.Item(0, "Select Category...");
            model.addElement(tItem);
            categoryList = new ArrayList<>();
            while (rs.next()) {
               // combocustomername.addItem(rs.getString("First_Name"));
                Category.Item item = new Category.Item(index++, rs.getString("name"));
                model.addElement(item);
                
                categoryList.add(
                        new CategoryClass(String.valueOf(rs.getInt("id")), 
                                rs.getString("name")));
                               
//                                rs.getString("permission")
                                
                            
                        
            }

            combocategoryname.setModel(model);
        
    } catch (SQLException ex) {
        Logger.getLogger(Category.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    class Item {
        private int index;
        private String name;

        public Item(int index, String name) {
            this.index = index;
            this.name = name;
        }

        @Override
        public String toString() {
            return name; //To change body of generated methods, choose Tools | Templates.
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtcategoryname = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnsave = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnrefresh = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        combocategoryname = new javax.swing.JComboBox();

        setClosable(true);
        setTitle("Category");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 0, 0))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Category Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addComponent(txtcategoryname, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcategoryname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnrefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnrefresh.setText("Refresh");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });

        btnupdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnupdate)
                .addGap(18, 18, 18)
                .addComponent(btnrefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btndelete)
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnsave)
                    .addComponent(btndelete)
                    .addComponent(btnupdate)
                    .addComponent(btnrefresh))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Search by Name");

        combocategoryname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combocategorynameItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(combocategoryname, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combocategoryname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnrefreshActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String name=txtcategoryname.getText();
    
        if(name.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Category Name field is empty... please fill it first!!");
        }
        else if(!(Pattern.matches("^[a-zA-Z ,]+$", txtcategoryname.getText())))
        {
            JOptionPane.showMessageDialog(this, "Please enter valid name");
        }
        else
        {
            try
            {
                con=DBConnection.getConnection();
                pst=con.prepareStatement("insert into category(name) values(?)");
                pst.setString(1, name);
                int i=pst.executeUpdate();
                if(i>0)
                {
                    JOptionPane.showMessageDialog(this, "Added Successfully");
                    //txtcategoryname.setText("");
                    clear();
                   
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Not added Successfully");
                }
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e);
            }
        }
//        populateCategoryIdCombo();
        populateCategoryNameCombo();
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        //String categoryid=txtcategoryid.getText();
        String categoryname=txtcategoryname.getText();
        /*if(categoryid.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Category id field is empty...please fill it first");
        }
        else if(!(Pattern.matches("^[0-9]+", txtcategoryid.getText())))
            {
                JOptionPane.showMessageDialog(this, "Please enter valid category id");
            }*/
        //else
        //{
        try
        {
            
            con=DBConnection.getConnection();
            pst=con.prepareStatement("delete from category where name=?");
            pst.setString(1, categoryname);
            int i=pst.executeUpdate();
            if(i>0)
            {
               JOptionPane.showMessageDialog(this, "data deleted successfully");
                    clear();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "data not found");
                //txtcategoryid.setText("");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
//        populateCategoryIdCombo();
      //}
    }//GEN-LAST:event_btndeleteActionPerformed
    
    //String selectedCategoryName = "";
    int selectedCategoryId = 0;
    private void combocategorynameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combocategorynameItemStateChanged
        // TODO add your handling code here:
//        try {
//        
//        String selectedId = (String) combocategoryid.getSelectedItem();
//        
//        if(selectedId.equals("") || selectedId == null)
//            return;
//        
//        con = DBConnection.getConnection();
//        pst = con.prepareStatement("select * from category where name in (select name from category where id = ?)");
//        pst.setString(1, selectedId);
//        
//        ResultSet rs = pst.executeQuery();
//        rs.next();
//        
//        txtcategoryname.setText(rs.getString("name"));
//        //selectedCategoryName = (String) combocategoryid.getSelectedItem();
//        
//    } catch (SQLException ex) {
//        Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
//    } catch (NullPointerException e) {
//        //populateCategoryIdCombo();
//    }
        try {
        
        /*String selectedName = (String) comborolename.getSelectedItem();
        
        if(selectedName.equals("") || selectedName == null)
            return;*/
             if (categoryList == null || combocategoryname.getSelectedIndex() == 0)
                return;
        
        con = DBConnection.getConnection();
        pst = con.prepareStatement("select * from category where id=?");
        //pst.setString(1, selectedName);
        pst.setInt(1, Integer.parseInt(categoryList.get(combocategoryname.getSelectedIndex()-1).getId()));
        
        ResultSet rs = pst.executeQuery();
        rs.next();
        
        txtcategoryname.setText(rs.getString("name"));
       // combopermission.setSelectedItem(rs.getString("permission"));
        selectedCategoryId = combocategoryname.getSelectedIndex();
    } catch (SQLException ex) {
        Logger.getLogger(Category.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_combocategorynameItemStateChanged

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
     String categoryname=txtcategoryname.getText();
//        String permission=combopermission.getSelectedItem().toString();
        /*if(roleid.isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Role id field is empty...please fill it first");
            }
            else if(!(Pattern.matches("^[0-9]+", txtroleid.getText())))
            {
                JOptionPane.showMessageDialog(this, "Please enter valid role id");
            }*/
             if(categoryname.isEmpty())
            {
            JOptionPane.showMessageDialog(this, "Category Name field is empty... please fill it first!!");
            }
/*            else if(combopermission.getSelectedItem().toString().equals(""))
            {
            JOptionPane.showMessageDialog(this, "Please select item first!!");
            }*/
        else if(!(Pattern.matches("^[a-zA-Z ,]+$", txtcategoryname.getText())))
        {
            JOptionPane.showMessageDialog(this, "Please enter valid Category Name");
        }
        
        else
        {
            try
            {
                con=DBConnection.getConnection();
                pst=con.prepareStatement("update category set name=? where id=?");
                
                pst.setString(1, categoryname);
//                pst.setString(2, permission);
                
                pst.setInt(2, Integer.parseInt(categoryList.get(combocategoryname.getSelectedIndex()-1).getId()));
                int i=pst.executeUpdate();
                if(i>0)
                {
                    JOptionPane.showMessageDialog(this, "Updated Successfully");
                    clear();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Not updated Successfully");
                }
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e);
            }
        }
//        populateCategoryIdCombo();
             populateCategoryNameCombo();
    }//GEN-LAST:event_btnupdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox combocategoryname;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField txtcategoryname;
    // End of variables declaration//GEN-END:variables
}
