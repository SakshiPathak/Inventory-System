/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventoryproject;

import com.inventorysystem.helpers.DBConnection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class Supplier extends javax.swing.JInternalFrame {
    Connection con=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    List<SupplierClass> supplierList;
    /**
     * Creates new form Supplier
     */
    public Supplier() {
        initComponents();
        supplierList = new ArrayList<>();
        populateSupplierNameCombo();
    }
    public void clear()
    {
        
        txtsuppliername.setText("");
        txtaddress.setText("");
        txtcity.setText("");
        txtpincode.setText("");
        txtstate.setText("");
        txtphoneno.setText("");
        combosuppliername.setSelectedIndex(0);
    }
    
    private void populateSupplierNameCombo() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
    try {
        con = DBConnection.getConnection();
        PreparedStatement pstmt = con.prepareStatement("select * from supplier order by name");
        
        ResultSet rs = pstmt.executeQuery();
        int index = 1;
            Supplier.Item tItem = new Supplier.Item(0, "Select Supplier...");
            model.addElement(tItem);
            
            while (rs.next()) {
               // combocustomername.addItem(rs.getString("First_Name"));
                Supplier.Item item = new Supplier.Item(index++, rs.getString("name"));
                model.addElement(item);
                
                supplierList.add(
                        new SupplierClass(
                               String.valueOf(rs.getInt("id")), 
                                rs.getString("name"),
                                rs.getString("address"),
                                rs.getString("city"),
                                String.valueOf(rs.getInt("pincode")),
                                rs.getString("state"),
                                rs.getString("phone")
                            
                        ));
            }

            combosuppliername.setModel(model);
        
    } catch (SQLException ex) {
        Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    class Item {
        private int index;
        private String name;

        public Item(int index, String name) {
            this.index = index;
            this.name = name;
        }

        @Override
        public String toString() {
            return name; //To change body of generated methods, choose Tools | Templates.
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtstate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtsuppliername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtcity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtpincode = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtphoneno = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnsave = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnrefresh = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        combosuppliername = new javax.swing.JComboBox();

        setClosable(true);
        setTitle("Supplier Detail");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Supplier Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 51, 0))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Supplier Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Address");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("City");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Pin Code");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("State");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Phone No");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtcity, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(txtpincode)
                            .addComponent(txtstate)
                            .addComponent(txtphoneno)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtsuppliername, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtsuppliername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtpincode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtphoneno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnupdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnrefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnrefresh.setText("Refresh");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnsave)
                .addGap(28, 28, 28)
                .addComponent(btnupdate)
                .addGap(35, 35, 35)
                .addComponent(btndelete)
                .addGap(18, 18, 18)
                .addComponent(btnrefresh)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnupdate)
                    .addComponent(btnsave)
                    .addComponent(btndelete)
                    .addComponent(btnrefresh))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Search by Name");

        combosuppliername.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combosuppliernameItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(65, 65, 65)
                .addComponent(combosuppliername, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combosuppliername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(93, 93, 93))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnrefreshActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String name=txtsuppliername.getText();
        String address=txtaddress.getText();
        String city=txtcity.getText();
        String pincode=txtpincode.getText();
        String state=txtstate.getText();
        String phoneno=txtphoneno.getText();
         if(name.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Name field is empty... please fill it first!!");
        }
         else if(address.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "Address field is empty... please fill it first!!");
         }
         else if(city.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "City field is empty... please fill it first!!");
         }
         else if(pincode.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "Pincode field is empty... please fill it first!!");
         }
         else if(state.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "State field is empty... please fill it first!!");
         }
         else if(phoneno.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "Phone No field is empty... please fill it first!!");
         }
         else if(!(Pattern.matches("^[a-zA-Z ,]+$", txtsuppliername.getText())))
         {
             JOptionPane.showMessageDialog(this, "Please enter valid name");
         }
         
         else if(!(Pattern.matches("^[a-zA-Z ,]+$", txtcity.getText())))
         {
             JOptionPane.showMessageDialog(this, "Please enter valid city");
         }
         else if(!(Pattern.matches("^[0-9]+", txtpincode.getText())))
            {
                JOptionPane.showMessageDialog(this, "Please enter valid pincode");
            }
         else if(!(Pattern.matches("^[a-zA-Z ,]+$", txtstate.getText())))
         {
             JOptionPane.showMessageDialog(this, "Please enter valid state");
         }
         else if(!(phoneno.matches("\\d{10}")))
        {
            JOptionPane.showMessageDialog(this, "Please enter 10 digit phone no");
        }
         else
         {
              boolean unique = true;
             try
             {
                 con=DBConnection.getConnection();
            Statement st=con.createStatement();
            rs=st.executeQuery("select address,phone from supplier");
            
            
            int c=0;
            while(rs.next())
            {
            c++;
            
           String add=rs.getString("address");
            String phno=rs.getString("phone");
            
            if (address.equals(add))
      {
	  JOptionPane.showMessageDialog(this, "Address already exists");
          unique = false;
      }
            else if(phoneno.equals(phno))
            {
                JOptionPane.showMessageDialog(this, "Phone no already exists");
                 unique = false;
            }
            
            }
         
            if(unique)
            {
            pst=con.prepareStatement("insert into supplier(name,address,city,pincode,state,phone) values(?,?,?,?,?,?)");
            pst.setString(1, name);
            pst.setString(2, address);
            pst.setString(3, city);
            pst.setString(4, pincode);
            pst.setString(5, state);
            pst.setString(6, phoneno);
            int i=pst.executeUpdate();
          
            if(i>0)
            {
            JOptionPane.showMessageDialog(this, "Added Successfully");
           clear();
             
            }
           
            else
            {
                JOptionPane.showMessageDialog(this, "Not added Successfully");
            }
          
        }
             }
             
             catch(Exception e)
             {
                 JOptionPane.showMessageDialog(this, e);
             }
         }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        //String supplierid=txtsupplierid.getText();
        String name=txtsuppliername.getText();
        String address=txtaddress.getText();
        String city=txtcity.getText();
        String pincode=txtpincode.getText();
        String state=txtstate.getText();
        String phoneno=txtphoneno.getText();
        
        if(name.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Name field is empty... please fill it first!!");
        }
         else if(address.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "Address field is empty... please fill it first!!");
         }
         else if(city.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "City field is empty... please fill it first!!");
         }
         else if(pincode.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "Pincode field is empty... please fill it first!!");
         }
         else if(state.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "State field is empty... please fill it first!!");
         }
         else if(phoneno.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "Phone No field is empty... please fill it first!!");
         }
         
         else if(!(Pattern.matches("^[a-zA-Z ,]+$", txtsuppliername.getText())))
         {
             JOptionPane.showMessageDialog(this, "Please enter valid name");
         }
         
         else if(!(Pattern.matches("^[a-zA-Z ,]+$", txtcity.getText())))
         {
             JOptionPane.showMessageDialog(this, "Please enter valid city");
         }
         else if(!(Pattern.matches("^[0-9]+", txtpincode.getText())))
            {
                JOptionPane.showMessageDialog(this, "Please enter valid pincode");
            }
         else if(!(Pattern.matches("^[a-zA-Z ,]+$", txtstate.getText())))
         {
             JOptionPane.showMessageDialog(this, "Please enter valid state");
         }
         else if(!(phoneno.matches("\\d{10}")))
        {
            JOptionPane.showMessageDialog(this, "Please enter 10 digit phone no");
        }
        
        else
        {
            try
            {
                con=DBConnection.getConnection();
                pst=con.prepareStatement("update supplier set address=?,city=?,pincode=?,state=?,phone=? where id=?");
             
                pst.setString(1, address);
                pst.setString(2, city);
                pst.setString(3, pincode);
                pst.setString(4, state);
                pst.setString(5, phoneno);
                 pst.setInt(6, Integer.parseInt(supplierList.get(combosuppliername.getSelectedIndex()-1).getId()));
                int i=pst.executeUpdate();
                if(i>0)
                {
                    JOptionPane.showMessageDialog(this, "Updated Successfully");
                    clear();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Not updated Successfully");
                }
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        //String phoneno=txtphoneno.getText();
        /*if(supplierid.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Supplier ID field is empty...please fill it first");
        }
        else if(!(Pattern.matches("^[0-9]+", txtsupplierid.getText())))
            {
                JOptionPane.showMessageDialog(this, "Please enter valid Supplier id");
            }*/
        //else
        //{
        try
        {
            
            con=DBConnection.getConnection();
            pst=con.prepareStatement("delete from supplier where id=?");
            pst.setInt(1, Integer.parseInt(supplierList.get(combosuppliername.getSelectedIndex()-1).getId()));
            int i=pst.executeUpdate();
            if(i>0)
            {
               JOptionPane.showMessageDialog(this, "data deleted successfully");
                    //txtsupplierid.setText("");
               clear();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "data not found");
                //txtsupplierid.setText("");
                
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
      //}
    }//GEN-LAST:event_btndeleteActionPerformed

    private void combosuppliernameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combosuppliernameItemStateChanged
        // TODO add your handling code here:
        try {
        
       /* String selectedName = (String) combosuppliername.getSelectedItem();
        
        if(selectedName.equals("") || selectedName == null)
            return;*/
            if (supplierList == null)
                return;
        
        con = DBConnection.getConnection();
        pst = con.prepareStatement("select * from supplier where id = ?");
        //pst.setString(1, selectedName);
        pst.setInt(1, Integer.parseInt(supplierList.get(combosuppliername.getSelectedIndex()-1).getId()));
        ResultSet rs = pst.executeQuery();
        rs.next();
        
        
        txtsuppliername.setText(rs.getString("name"));
        txtaddress.setText(rs.getString("address"));
        txtcity.setText(rs.getString("city"));
        txtpincode.setText(rs.getString("pincode"));
        txtstate.setText(rs.getString("state"));
        txtphoneno.setText(rs.getString("phone"));
       
        
    } catch (SQLException ex) {
        Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_combosuppliernameItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox combosuppliername;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtphoneno;
    private javax.swing.JTextField txtpincode;
    private javax.swing.JTextField txtstate;
    private javax.swing.JTextField txtsuppliername;
    // End of variables declaration//GEN-END:variables
}
